@startuml
' renovatio-web Component Diagram

title Renovatio Web - REST API & Web Interface

package "renovatio-web" {
  
  ' Web Controllers
  package "REST Controllers" {
    [RefactorController] #LightBlue
    [ToolController] #LightBlue
    [WorkspaceController] #LightBlue
    [HealthController] #LightBlue
  }
  
  ' Web Services
  package "Web Services" {
    [RefactorService] #LightCyan
    [ToolService] #LightCyan
    [WorkspaceService] #LightCyan
    [WebMetricsService] #LightCyan
  }
  
  ' Web Configuration
  package "Web Configuration" {
    [WebConfig] #LightGreen
    [SecurityConfig] #LightGreen
    [CorsConfig] #LightGreen
    [SwaggerConfig] #LightGreen
  }
  
  ' DTOs & Models
  package "Web Models" {
    [RefactorRequest] #LightYellow
    [RefactorResponse] #LightYellow
    [ToolRequest] #LightYellow
    [ToolResponse] #LightYellow
    [ErrorResponse] #LightYellow
  }
  
  ' Exception Handling
  package "Error Handling" {
    [GlobalExceptionHandler] #LightPink
    [ValidationExceptionHandler] #LightPink
    [ApiErrorHandler] #LightPink
  }
}

' External dependencies
[renovatio-core] #Orange
[Spring Boot] #LightGray
[OpenAPI/Swagger] #LightBlue

' Controller layer
RefactorController --> RefactorService : Uses
ToolController --> ToolService : Uses
WorkspaceController --> WorkspaceService : Uses
HealthController --> WebMetricsService : Uses

' Service layer
RefactorService --> [renovatio-core] : Uses Core Engine
ToolService --> [renovatio-core] : Uses Core Engine
WorkspaceService --> [renovatio-core] : Uses Core Engine
WebMetricsService --> [renovatio-core] : Uses Core Engine

' Configuration
WebConfig --> RefactorController : Configures
SecurityConfig --> RefactorController : Secures
CorsConfig --> RefactorController : CORS
SwaggerConfig --> [OpenAPI/Swagger] : Configures

' Data models
RefactorController --> RefactorRequest : Receives
RefactorController --> RefactorResponse : Returns
ToolController --> ToolRequest : Receives
ToolController --> ToolResponse : Returns

' Error handling
RefactorController --> GlobalExceptionHandler : Error Handling
ToolController --> GlobalExceptionHandler : Error Handling
GlobalExceptionHandler --> ValidationExceptionHandler : Validation
GlobalExceptionHandler --> ApiErrorHandler : API Errors
GlobalExceptionHandler --> ErrorResponse : Returns

' Framework integration
RefactorController --> [Spring Boot] : Spring MVC
WebConfig --> [Spring Boot] : Configuration

note top of RefactorController
  **REST API**
  - Traditional HTTP endpoints
  - OpenAPI documentation
  - JSON request/response
  - Error handling
end note

note bottom of RefactorService
  **Web Services**
  - Business logic layer
  - Core engine integration
  - Result transformation
  - Validation
end note

note right of [renovatio-core]
  **Core Integration**
  - Protocol-agnostic engine
  - Language providers
  - Tool execution
  - File operations
end note

@enduml

