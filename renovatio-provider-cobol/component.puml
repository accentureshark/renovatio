@startuml
' renovatio-provider-cobol Component Diagram

title Renovatio COBOL Provider - Migration to Java

package "renovatio-provider-cobol" {
  
  ' Provider Implementation
  package "Provider Core" {
    [CobolLanguageProvider] #Orange
    [CobolProviderConfiguration] #LightGreen
    [CobolCapabilities] #LightBlue
  }
  
  ' COBOL Parsing & Analysis
  package "COBOL Analysis" {
    [CobolParser] #LightPink
    [CobolAnalyzer] #LightPink
    [CobolAstBuilder] #LightPink
    [CobolSymbolExtractor] #LightPink
  }
  
  ' Migration Engine
  package "Migration Engine" {
    [JavaGenerationService] #LightCyan
    [MigrationPlanService] #LightCyan
    [MigrationExecutor] #LightCyan
    [TemplateCodeGenerationService] #LightCyan
  }
  
  ' Code Generation
  package "Code Generation" {
    [DtoGenerator] #LightYellow
    [ServiceGenerator] #LightYellow
    [ControllerGenerator] #LightYellow
    [MapperGenerator] #LightYellow
    [TestGenerator] #LightYellow
  }
  
  ' Specialized Tools
  package "COBOL Tools" {
    [CobolAnalyzeTool] #LightGray
    [CobolGenerateStubsTool] #LightGray
    [CobolMigrationPlanTool] #LightGray
    [CobolMigrationApplyTool] #LightGray
    [CobolMetricsTool] #LightGray
    [CobolDiffTool] #LightGray
    [CopybookMigrateTool] #LightGray
  }
  
  ' External Services
  package "External Integration" {
    [IndexingService] #LightBlue
    [MetricsService] #LightBlue
    [ResilientMigrationService] #LightBlue
  }
}

' External dependencies
[renovatio-shared] #LightCyan
[ANTLR4 Runtime] #Orange
[ProLeap Parser] #Orange
[Freemarker] #LightGreen
[MapStruct] #LightGreen
[Apache Lucene] #LightBlue

' Provider implementation
CobolLanguageProvider --> CobolProviderConfiguration : Configured by
CobolLanguageProvider --> CobolCapabilities : Exposes

' COBOL parsing
CobolParser --> [ANTLR4 Runtime] : Uses Grammar
CobolParser --> [ProLeap Parser] : Uses Parser
CobolAnalyzer --> CobolParser : Uses
CobolAstBuilder --> CobolParser : Uses
CobolSymbolExtractor --> CobolAstBuilder : Uses

' Migration services
JavaGenerationService --> TemplateCodeGenerationService : Uses
TemplateCodeGenerationService --> [Freemarker] : Template Engine
MigrationPlanService --> CobolAnalyzer : Analyzes
MigrationExecutor --> JavaGenerationService : Executes
MigrationExecutor --> ResilientMigrationService : Resilience

' Code generators
DtoGenerator --> TemplateCodeGenerationService : Uses
ServiceGenerator --> TemplateCodeGenerationService : Uses
ControllerGenerator --> TemplateCodeGenerationService : Uses
MapperGenerator --> [MapStruct] : Generates
TestGenerator --> TemplateCodeGenerationService : Uses

' Tool implementations
CobolAnalyzeTool --> CobolAnalyzer : Uses
CobolGenerateStubsTool --> JavaGenerationService : Uses
CobolMigrationPlanTool --> MigrationPlanService : Uses
CobolMigrationApplyTool --> MigrationExecutor : Uses
CobolMetricsTool --> MetricsService : Uses
CobolDiffTool --> CobolAnalyzer : Uses
CopybookMigrateTool --> DtoGenerator : Uses

' External services
IndexingService --> [Apache Lucene] : Indexing
MetricsService --> CobolAnalyzer : Uses
ResilientMigrationService --> MigrationExecutor : Wraps

' Shared interfaces
CobolLanguageProvider --> [renovatio-shared] : Implements LanguageProvider
CobolAnalyzeTool --> [renovatio-shared] : Implements Tool
CobolGenerateStubsTool --> [renovatio-shared] : Implements Tool
CobolMigrationPlanTool --> [renovatio-shared] : Implements Tool
CobolMigrationApplyTool --> [renovatio-shared] : Implements Tool
CobolMetricsTool --> [renovatio-shared] : Implements Tool
CobolDiffTool --> [renovatio-shared] : Implements Tool
CopybookMigrateTool --> [renovatio-shared] : Implements Tool

note top of CobolLanguageProvider
  **COBOL Provider**
  - ANTLR4/ProLeap parsing
  - Migration to Java
  - Template-based generation
  - Enterprise patterns
end note

note bottom of JavaGenerationService
  **Java Generation**
  - DTOs from copybooks
  - REST controllers
  - MapStruct mappers
  - JPA entities
  - Test classes
end note

note right of [ANTLR4 Runtime]
  **COBOL Parsing**
  - ANTLR4 grammar
  - ProLeap parser
  - AST generation
  - Symbol extraction
end note

@enduml

